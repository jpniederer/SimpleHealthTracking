@{
    ViewBag.Title = "Home Page";
}

<div>
    @Html.Partial("~/Views/Checkin/CheckinPartial.cshtml")
</div>
<hr />
<div>
    @Html.Partial("~/Views/Sleep/SleepPartial.cshtml")
</div>
<hr />
<div>
    @Html.Partial("~/Views/MedicineTaken/MedicineTakenPartial.cshtml")
</div>
<hr />
<div class="row">
    <div class="col-md-4">
        <h2>Sleep Patterns</h2>
        <p>
            How much you've slept in the last 30 days.
        </p>
        <p>
            <div class="chart">
            </div>
        </p>
    </div>
    <div class="col-md-4">
        <h2>Weight Over Time</h2>
        <p></p>
        <p></p>
    </div>
    <div class="col-md-4">
        <h2>Recent Heartrates</h2>
        <p></p>
        <p>
            <div class="heartrateChart">
                <svg id="heartChart"></svg>
            </div>
        </p>
    </div>
</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/timer.js"></script>
    <script src="~/Scripts/createSleep.js"></script>    
    <script src="~/Scripts/createCheckin.js"></script>
    <script src="~/Scripts/createMedicineTaken.js"></script>
    <script src="~/Scripts/jquery.timepicker.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://d3js.org/d3.v4.min.js"></script>
    <script>
        $(function () {
            $(".datepicker").datepicker();

            $(".timepicker").timepicker({
                'step': 15,
                'timeFormat': 'H:i'
            });

            $(".timepickerEnd").timepicker({
                'scrollDefault': '08:00',
                'step': 15,
                'timeFormat': 'H:i'
            });

            $(".timepickermt").timepicker({
                'scrollDefault': '22:00',
                'step': 15,
                'timeFormat': 'H:i'
            });
        });

        //var data;
        var checkinWeightsJson, checkinHeartratesJson,
            weights, heartrates;
        $(document).ready(function () {
            setupTestChart();
            setupDataSets();
            setupWeights();
            setupHeartrates();
            setupHeartrateGraph();
        });

        function setupDataSets() {
            $.get("api/CheckinApi/GetLastCheckinsForWeights?count=30", function (d) {
                checkinWeightsJson = d;
            });
            $.get("api/CheckinApi/GetLastCheckinsForHeartrates?count=30", function (d) {
                checkinHeartratesJson = d;
            });
        };

        function setupWeights() {
            weights = checkinWeightsJson.map(function (item) {
                return {
                    weight: item.Weight,
                    time: item.TimeAdded
                };
            });
        };

        function setupHeartrates() {
            heartrates = checkinHeartratesJson.map(function (item) {
                return {
                    x: item.TimeAdded,
                    y: item.Heartrate                    
                };
            });
        };

        function setupHeartrateGraph() {
            var heart = d3.select("#heartChart"),
                margins = { top: 10, right: 10, bottom: 10, left: 20 },
                width = 400, //+.attr("width") - margin.left - margin.right,
                height = 150, //+svg.attr("height") - margin.top - margin.bottom,
                //g = svg.append("g").attr("transform", "translate(" + margin.left + ", " + margin.top + ")");
                xRange = d3.scaleLinear().range([margins.left, width - margins.right]).domain([
                    d3.min(heartrates, function (d) {
                        return d.x;
                    }),
                    d3.max(heartrates, function (d) {
                        return d.x;
                    })
                ]),
                yRange = d3.scaleLinear().range([height - margins.top, margins.bottom]).domain([
                    d3.min(heartrates, function (d) {
                        return d.y;
                    }),
                    d3.max(heartrates, function (d) {
                        return d.y;
                    })
                ]),
                xAxis = d3.axisBottom()
                    .scale(xRange),
                    //.tickSize(5)
                    //.tickSubdivde(true),
                yAxis = d3.axisLeft()
                    .scale(yRange);
                    //.tickSize(5)
                    //.orient("left")
                    //.tickSubdivide(true);

            heart.append("svg:g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + (height - margins.bottom) + ")")
                .call(xAxis);

            heart.append("svg:g")
              .attr("class", "y axis")
              .attr("transform", "translate(" + (margins.left) + ",0)")
              .call(yAxis);
        };

        function setupTestChart() {
            var data = [4, 8, 15, 16, 23, 42];
            //var x = d3.scale.linear()
            //    .domain([0, d3.max(data)])
            //    .range([0, 420]);

            d3.select(".chart")
              .selectAll("div")
                .data(data)
              .enter().append("div")
                .style("width", function (d) { return d * 10 + "px"; })
                .text(function (d) { return d; });
        };
        
    </script>
}